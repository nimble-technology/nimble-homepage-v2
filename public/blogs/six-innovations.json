{
    "title": "Six Innovations for Composable AI",
    "author": "Xin Jin",
    "createDate": "2024-01-15",
    "content": "_Understand the tech breakthroughs that make Nimble the first composable AI protocol to rebuild Silicon Valley in Web3_\n\nNimble was conceived in 2021 when its founding team sought a way for a decentralized network of nodes to orchestrate a **_trustless AI infrastructure for everything_**. None of the major decentralized networks, including blockchains, achieve this property. Accomplishing this is Nimble’s North Star.\n\nBlockchains like Ethereum, Solana, Aptos, BNB, Avalanche, Cosmos, Sei, and Injective scale the network transactions with Byzantine Fault Tolerance-based Proof of Stake (PoS) systems. Today's blockchains still do not support the most important internet applications to achieve the Web3 vision: Web3 is the internet owned by the builders and users, orchestrated with tokens. Nimble, an AI-centric decentralized network, supports general-purpose AI and everything marketplace applications, making it the most general-purpose decentralized infrastructure for Internet applications.\n\nThe Nimble team has successfully built sophisticated tech solutions, products, and platforms that have been used by billions of people worldwide. Since its inception, the team — consisting of serial entrepreneurs and established researchers from Apple, Meta, Uber, Palo Alto Networks, and Robinhood — has focused on building the tech to realize the ultimate Web3 internet being owned by the builders and users.\n\nTo create a decentralized, permissionless network that enables any Internet application, the Nimble team developed 6 key technologies:\n\n\n\n* Proof of Gradient - the AI Version of PoS;\n* Sandhill - The AI Validation Protocol;\n* Rainstorm - Horizontally-Scaled Dispatching Network;\n* Orchestrator - Modular Incentives for the AI Marketplace;\n* Bandwagon - General Purpose Network Database; and\n* HashTrail - Distributed AI Ledger\n\nIn this essay, we’ll briefly explain each of the above.\n\n\n# Proof of Gradient - the AI Version of PoS\n\nToday’s internet is an everything marketplace powered by AI, matching users with content, products, advertisers, drivers, house owners, and restaurants. Users express themselves explicitly with natural language queries in searches, likes in recommendations, rides in ride-hailing apps, purchases in e-commerce websites, and clicks in ad ranking systems. The internet applications are built and designed around AI.\n\nIf a decentralized network will support any Internet applications, that implies that transactions cannot be the core of the design but rather AI requests, to achieve this, we need to first define what AI requests are and how they reach consensus.\n\nToday’s blockchains are built with a transaction-centric approach for digital assets. The key logic of accounts, transactions, and contracts is linked to tokens. There are no ways to express users in a complex and general-purpose manner like Web2.\n\nThe core innovation is Proof of Gradient (PoG), in which the key operating elements of the protocol are AI requests. AI requests are represented by unique identifiers, metadata, and an arbitrary associated payload. Network validators reach a consensus about AI processing and message dispatching with PoS-like consensus algorithms. Miners earn network token rewards with Proof of Work for gradient learning. The associated payload can be natural language API requests or mining gradients with general-purpose AI or structured data fields in DSL format. Nimble is designed to be blocks of AI structured as Merkle trees.\n\nThis core innovation opens the design space for decentralized applications (dApps). It enables decentralized AI marketplace applications on blockchains and allows developers to build decentralized data marketplaces (e.g., Google), ride-hailing marketplaces (e.g., Uber), e-commerce product marketplaces (e.g., Amazon), and so on.\n\n\n# Sandhill - The AI Validation Protocol\n\nSandhill validates computations of network miners, which are incentivized by Nimble network tokens. More technical details are available in the Nimble technical whitepaper.\n\nLet us take the Intent Action Recognition Protocol as an example. To solve the Web3 usability crisis, it can be built on the Nimble AI network and translate AI into actions — accurate, executable, and DSL formatted on-chain and off-chain. This innovative Intent Action Recognition (IAR) technology is tasked to translate user intents in arbitrary formats into specific on-chain actions.\n\nIAR is a set of LLMs specialized in entity sequence modeling, conversational interactions, and task agents. First, intents are mapped into word entities with the Nimble tagging system after spelling correction and tokenization. Entity sequence modeling tags each word in the user intents with real meanings (e.g., tag ETH as Ethereum native tokens and swap as a trading action). With model predictions of entity tags, DSLs are leveraged for accurate and specific intent operation understanding. Often, user inputs are incomplete (e.g., swap ETH for USDC) in which quantities or other info are missing. LAR conversational module interacts with users to collect the missing inputs for precise action mapping. The agent module consolidates learned tags and intent inputs into a DSL format intent.\n\nIt is also a general-purpose AI layer with today’s purpose-built LLMs, which can be run entirely at the edge, including an end user’s mobile device. As described above, these purpose-built LLMs coordinate and work together as a team to fulfill network tasks like IAR. They communicate with each other with a horizontally-scaled dispatching protocol.\n\n\n# Rainstorm - Horizontally-Scaled Dispatching Network\n\nNimble network is designed for multi-sided AI marketplaces handling large-scale requests daily across the globe. Think of the network scale when Uber, Airbnb, and TikTok applications run on the Nimble decentralized network. This Web2 network scale support is never tackled in any decentralized network. We thus strive to build real-time experiences for all users.\n\nThe nature of real-time marketplaces makes AI dispatching very lively. Over the lifetime of an AI request, multiple network participants can view and update the state of an ongoing request and need real-time responses. This creates the need to build a horizontally scaled dispatching system and keep network participants synced with real-time AI request information, whether through request understanding time, AI DSL processing time and miners computing the executions, or users receiving AI completion notifications on their dApps.\n\nAI dispatching is an orchestration among nodes of heterogeneous capacities, joining and leaving the network dynamically in a decentralized manner. These network nodes need to stay updated with each other as the requests are processed.\n\nConsider a scenario where a user has requested an AI operation, and miners are online to provide a service. Nimble’s dispatching system identifies a match and provides a solution offered to the user. Now, everyone (request router, auctioneer, and miner) should be synchronized with each other’s progress.\n\nThe fundamental building blocks of Nimble are autonomous agents: network nodes, miners, and modular auction agents. These are capable of accomplishing tasks entirely on their own. A membership protocol that allows independent agents to discover each other and detect failures. Consistent hashing is adopted to assign work across the agents.\n\nSprouted from the same never-go-down, always-keep-growing demands for large-scale Web2 applications, what Nimble brings to the table is a decentralized way to get that same partitioning and cooperation at the application level. Nimble nodes detect new capacity when added to the network, remove capacity from the network in the event of failure, and distribute the load evenly over whatever capacity there is at any given time. It acts as routing middleware, directing requests to its owner before reaching its handler.\n\nThe dispatching nodes are self-organizing and autonomous as a decentralized network. Based on interaction histories, they are rational and aware of other nodes’ capacities. The network is resilient with a graph topology, and a fanout of 20 implies log_20(N) time complexity for any request dispatching. N is the total number of nodes in the network.\n\n\n# Orchestrator - Modular Incentives for the AI Protocol\n\nNimble’s ultimate purpose is to coordinate a network of independent miner agents for the AI Protocol. One of the most critical design components is incentive provision for network participants — users with a request to be fulfilled, miners with the expertise to contribute, and validators with computation resources to secure the network.\n\nAt Web2 scale, a centralized mechanism optimization would not work due to the notorious dimensionality problem. With the growing number of AI training and prediction requests, it becomes a matching problem in which each network participant has different optimization goals and definitions of preferences. A direct consequence is the optimization problem will become extremely complex, while the notorious dimensionality problem introduces exponential computational complexity.\n\nOur modular auctions scale the design by coordinating specialized and generic miners working together to formulate an everything marketplace. The mechanism enjoys truthfulness revealing, incentive compatibility, and regret minimization. Specialized miners participate in auctions for the specific request types they are optimized for. Generic and more powerful miners optimize for different and general request types by participating in multiple auctions simultaneously or in a multi-stage manner. Despite exponential user request growth, the modular mechanism design scales the auction layer horizontally.\n\nThe modular auctions are inspired by micro-services in big organizations such as Google, Amazon, and Meta. It is the ultimate way out for scalability without optimization sacrifices by introducing competition among miners.\n\n\n# Bandwagon - General Purpose Network Database\n\nEverything AI marketplace infrastructure is only possible with data flexibility instead of being limited to rigid transaction data. The data is thus abstracted as a blob with unique identifiers, metadata, and data rows. Metadata contains data types such as AI data request types, bids, or solutions, while the data row is flexible enough to store all the detailed information related to the data blob. The unique identifier serves as the key in data blob search and modifications.\n\nReliability at a massive scale with flexible user and miner requests is a unique problem to be solved in a decentralized network. In critical financial marketplaces, even the slightest outage has significant consequences. Nimble network runs on tens of thousands of servers and network components in any location worldwide.\n\nNimble must scale incrementally. Nimble’s partitioning scheme relies on consistent hashing to distribute the load across multiple storage hosts. In consistent hashing, the output range of a hash function is treated as a fixed circular space or “ring” (i.e., the largest hash value wraps around to the smallest hash value). Each node in the system is assigned a random value within this space representing its “position” on the ring. Each data item identified by a key is assigned to a node by hashing the key to yield its position on the ring and then walking the ring clockwise to find the first node with a position larger than the item’s position.\n\nNimble treats the result of each modification as a new and immutable version of the data. It allows multiple versions of an object to be simultaneously present in the system. Often, new versions subsume the previous version(s), and the system can determine the authoritative version (syntactic reconciliation).\n\n\n# HashTrail - Distributed AI Ledger\n\nThe ledger is organized as Merkle trees for anti-entropy: Each node maintains a separate Merkle tree for each key range (the set of keys covered by a virtual node) it hosts. This allows nodes to compare whether the keys within a key range are up-to-date. In this scheme, two nodes exchange the root of the Merkle tree corresponding to the key ranges they host in common.\n\nAt Web2 scale, small and large components fail continually. How the persistent state is managed in the face of these failures drives the reliability and scalability of the software systems. It makes extensive use of object versioning and application-assisted conflict resolution in a manner that provides a novel interface for developers to use.\n\nFailure detection is used to avoid attempts to communicate with unreachable peers during get() and put() operations and when transferring partitions and hinted replicas. A purely local notion of failure detection is entirely sufficient to avoid failed attempts at communication: node A may consider node B failed if node B does not respond to node A’s messages (even if B is responsive to node C's messages).\n\nNimble replicates its data on multiple hosts to achieve high availability and durability. Each data item is replicated at N hosts, where N is a parameter configured “per instance”. Each key, k, is assigned to a coordinator node (described in the previous section). The coordinator is responsible for replicating the data items within its range.\n\n\n# Summary\n\nAs a result of these 6 major innovations, the Nimble network is always online for real-time handling of AI training & prediction requests. It has a general purpose with a focus on the marketplace protocol design. Moreover, for such generality, it supports any marketplace applications on today’s Internet.\n\nNimble is designed to remove today’s blockchain limitations and enable developers to decentralize Silicon Valley by building decentralized data applications (e.g., search & recommendation), decentralized AI networks (e.g., self-organizing agents), decentralized E-Commerce, and social websites. There will be no operation limitations with the modular auction incentive mechanism design, together with the following 6 innovations:\n\n\n\n* Proof of Gradient - the AI Version of PoS;\n* Sandhill - The Composable AI Protocol;\n* Rainstorm - Horizontally-Scaled Dispatching Network;\n* Orchestrator - Modular Incentives for the AI Marketplace;\n* Bandwagon - General Purpose Network Database; and\n* HashTrail - Distributed AI Ledger\n\n\n# State of the Network\n\nThe Nimble network is under active development and is targeted for mainnet beta launch by the end of 2023."
  }
